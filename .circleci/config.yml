version: 2
jobs:
  build:
    docker:
      - image: circleci/node:10.15
    steps:
      - checkout
      - run: yarn install
      - run: yarn build
      - save_cache:
            key: universal-login-{{ .Environment.CIRCLE_SHA1 }}
            paths:
              - ~/project
  lint:
    docker:
      - image: circleci/node:10.15
    steps:
      - restore_cache:
            keys:
                - universal-login-{{ .Environment.CIRCLE_SHA1 }}
      - run: yarn lint
  test_commons:
    docker:
      - image: circleci/node:10.15
    steps:
      - restore_cache:
            keys:
                - universal-login-{{ .Environment.CIRCLE_SHA1 }}
      - run: cd universal-login-commons && yarn test
  test_contracts:
    docker:
      - image: circleci/node:10.15
    steps:
      - restore_cache:
            keys:
                - universal-login-{{ .Environment.CIRCLE_SHA1 }}
      - run: cd universal-login-contracts && yarn test
  test_relayer:
    docker:
      - image: circleci/node:10.15
        environment:
          PG_HOST: localhost
          PG_USER: postgres
      - image: circleci/postgres:9.6-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: universal_login_relayer_test
    steps:
      - restore_cache:
            keys:
                - universal-login-{{ .Environment.CIRCLE_SHA1 }}
      - run: cd universal-login-relayer && yarn test
  test_ops:
    docker:
      - image: circleci/node:10.15
        environment:
          PG_HOST: localhost
          PG_USER: postgres
      - image: circleci/postgres:9.6-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: universal_login_relayer_test
    steps:
      - restore_cache:
            keys:
                - universal-login-{{ .Environment.CIRCLE_SHA1 }}
      - run: cd universal-login-ops && yarn test
  test_sdk:
    docker:
      - image: circleci/node:10.15
        environment:
          PG_HOST: localhost
          PG_USER: postgres
      - image: circleci/postgres:9.6-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: universal_login_relayer_test
    steps:
      - restore_cache:
            keys:
                - universal-login-{{ .Environment.CIRCLE_SHA1 }}
      - run: cd universal-login-sdk && yarn test
  test_example:
    docker:
      - image: circleci/node:10.15
        environment:
          PG_HOST: localhost
          PG_USER: postgres
      - image: circleci/postgres:9.6-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: universal_login_relayer_test
    steps:
      - restore_cache:
            keys:
                - universal-login-{{ .Environment.CIRCLE_SHA1 }}
      - run: cd universal-login-example && yarn test
  test_wallet:
    docker:
      - image: circleci/node:10.15
      - image: circleci/postgres:9.6-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: universal_login_relayer_test
    steps:
      - restore_cache:
            keys:
                - universal-login-{{ .Environment.CIRCLE_SHA1 }}
      - run: cd universal-login-wallet && yarn test
  build_klab_specs:
    docker:
      - image: circleci/node:10.15
    steps:
      - restore_cache:
          keys:
              - universal-login-{{ .Environment.CIRCLE_SHA1 }} 
      - run:
          command: |
            sudo apt-get install make gcc maven openjdk-8-jdk flex pkg-config libmpfr-dev autoconf libtool pandoc zlib1g-dev z3 libz3-dev
            git clone https://github.com/dapphub/klab.git
            cd klab && make deps && sudo make link
            export PATH=$PATH:/usr/local/bin
            export KLAB_EVMS_PATH=/home/circleci/project/klab/evm-semantics
            export TMPDIR=/tmp
            cd ../formal-verification && yarn build
      - save_cache:
            key: klab-specs-{{ .Environment.CIRCLE_SHA1 }}
            paths:
              - ~/project
  run_klab:
    docker:
      - image: circleci/node:10.15
        environment:
          TERM: xterm-256color
    steps:
      - restore_cache:
            keys:
                - klab-specs-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          command: |
            sudo apt-get install openjdk-8-jdk flex z3 libz3-dev
            cd klab && sudo make link
            export PATH=$PATH:/usr/local/bin
            export KLAB_EVMS_PATH=/home/circleci/project/klab/evm-semantics
            export TMPDIR=/tmp
            cd ../formal-verification && yarn test
          no_output_timeout: 50m
  run_klab_1:
    docker:
      - image: circleci/node:10.15
        environment:
          TERM: xterm-256color
    steps:
      - restore_cache:
            keys:
                - klab-specs-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          command: |
            sudo apt-get install openjdk-8-jdk flex z3 libz3-dev
            cd klab && sudo make link
            export PATH=$PATH:/usr/local/bin
            export KLAB_EVMS_PATH=/home/circleci/project/klab/evm-semantics
            export TMPDIR=/tmp
            cd ../formal-verification && yarn test-1
          no_output_timeout: 50m
  run_klab_2:
    docker:
      - image: circleci/node:10.15
        environment:
          TERM: xterm-256color
    steps:
      - restore_cache:
            keys:
                - klab-specs-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          command: |
            sudo apt-get install openjdk-8-jdk flex z3 libz3-dev
            cd klab && sudo make link
            export PATH=$PATH:/usr/local/bin
            export KLAB_EVMS_PATH=/home/circleci/project/klab/evm-semantics
            export TMPDIR=/tmp
            cd ../formal-verification && yarn test-2
          no_output_timeout: 50m
  run_klab_3:
    docker:
      - image: circleci/node:10.15
        environment:
          TERM: xterm-256color
    steps:
      - restore_cache:
            keys:
                - klab-specs-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          command: |
            sudo apt-get install openjdk-8-jdk flex z3 libz3-dev
            cd klab && sudo make link
            export PATH=$PATH:/usr/local/bin
            export KLAB_EVMS_PATH=/home/circleci/project/klab/evm-semantics
            export TMPDIR=/tmp
            cd ../formal-verification && yarn test-3
          no_output_timeout: 50m
  run_klab_4:
    docker:
      - image: circleci/node:10.15
        environment:
          TERM: xterm-256color
    steps:
      - restore_cache:
            keys:
                - klab-specs-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          command: |
            sudo apt-get install openjdk-8-jdk flex z3 libz3-dev
            cd klab && sudo make link
            export PATH=$PATH:/usr/local/bin
            export KLAB_EVMS_PATH=/home/circleci/project/klab/evm-semantics
            export TMPDIR=/tmp
            cd ../formal-verification && yarn test-4
          no_output_timeout: 50m

workflows:
  version: 2

  nightly_formal_verification:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - build
      - build_klab_specs
      - run_klab:
          requires:
            - build
            - build_klab_specs

  universal_login_all:
    jobs:
      - build
      - test_commons:
          requires:
            - build
      - test_contracts:
          requires:
            - build
      - test_example:
          requires:
            - build
      - test_ops:
          requires:
            - build
      - test_relayer:
          requires:
            - build
      - test_sdk:
          requires:
            - build
      - test_wallet:
          requires:
            - build
      - lint:
          requires:
            - build
      - build_klab_specs:
          filters:
            branches:
              only: /fv-.*/
          requires:
            - build
      - run_klab_1:
          filters:
            branches:
              only: /fv-dist.*/
          requires:
            - build_klab_specs
      - run_klab_2:
          filters:
            branches:
              only: /fv-dist.*/
          requires:
            - build_klab_specs
      - run_klab_3:
          filters:
            branches:
              only: /fv-dist.*/
          requires:
            - build_klab_specs
      - run_klab_4:
          filters:
            branches:
              only: /fv-dist.*/
          requires:
            - build_klab_specs
      - run_klab:
          filters:
            branches:
              only:
                - /fv-one.*/
          requires:
            - build_klab_specs


